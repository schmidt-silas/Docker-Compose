services:
  #UI dashboard
  dashboard:
    image: netbirdio/dashboard:latest
    restart: unless-stopped
    #ports:
    #  - 80:80
    #  - 443:443
    environment:
      # Endpoints
      - NETBIRD_MGMT_API_ENDPOINT=https://${SUB_DOMAIN}.${DOMAIN}:443
      - NETBIRD_MGMT_GRPC_API_ENDPOINT=https://${SUB_DOMAIN}.${DOMAIN}:443
      # OIDC
      - AUTH_AUDIENCE=${CLIENT_ID}
      - AUTH_CLIENT_ID=${CLIENT_ID}
      - AUTH_CLIENT_SECRET=
      - AUTH_AUTHORITY=https://${AUTH_DOMAIN}/application/o/netbird/
      - USE_AUTH0=false
      - AUTH_SUPPORTED_SCOPES=openid profile email offline_access api
      - AUTH_REDIRECT_URI=
      - AUTH_SILENT_REDIRECT_URI=
      - NETBIRD_TOKEN_SOURCE=accessToken
      # SSL
      - NGINX_SSL_PORT=443
      # Letsencrypt
      - LETSENCRYPT_DOMAIN=
      - LETSENCRYPT_EMAIL=
    volumes:
      - ./volume/letsencrypt:/etc/letsencrypt/
    networks:
      - proxy
    labels:
    - traefik.enable=true
    - traefik.http.routers.${SUB_DOMAIN}-dashboard.entrypoints=https,http
    - traefik.http.routers.${SUB_DOMAIN}-dashboard.rule=Host(`${SUB_DOMAIN}.${DOMAIN}`)
    - traefik.http.routers.${SUB_DOMAIN}-dashboard.tls=true
    - traefik.http.routers.${SUB_DOMAIN}-dashboard.service=${SUB_DOMAIN}@docker
    - traefik.http.services.${SUB_DOMAIN}.loadbalancer.server.port=80
    - traefik.docker.network=proxy

  # Signal
  signal:
    image: netbirdio/signal:latest
    restart: unless-stopped
    volumes:
      - ./volume/signal:/var/lib/netbird
    #ports:
    #  - 10000:80
  #      # port and command for Let's Encrypt validation
  #      - 443:443
  #    command: ["--letsencrypt-domain", "", "--log-file", "console"]
    networks:
      - proxy
    labels:
    - traefik.enable=true
    - traefik.http.routers.${SUB_DOMAIN}-signal.entrypoints=https,http
    - traefik.http.routers.${SUB_DOMAIN}-signal.rule=Host(`${SUB_DOMAIN}.${DOMAIN}`) && PathPrefix(`/signalexchange.SignalExchange/`)
    - traefik.http.routers.${SUB_DOMAIN}-signal.tls=true
    - traefik.http.routers.${SUB_DOMAIN}-signal.service=signal@docker
    - traefik.http.services.signal.loadbalancer.server.port=80
    - traefik.http.services.signal.loadbalancer.server.scheme=h2c
    - traefik.docker.network=proxy

  # Management
  management:
    image: netbirdio/management:latest
    restart: unless-stopped
    depends_on:
      - dashboard
    volumes:
      - ./volume/mgmt:/var/lib/netbird
      - ./volume/letsencrypt:/etc/letsencrypt:ro
      - ./volume/management.json:/etc/netbird/management.json
    #ports:
    #  - 443:443 #API port
  #    # command for Let's Encrypt validation without dashboard container
  #    command: ["--letsencrypt-domain", "", "--log-file", "console"]
    command: [
      "--port", "443",
      "--log-file", "console",
      "--disable-anonymous-metrics=false",
      "--single-account-mode-domain=${SUB_DOMAIN}.${DOMAIN}",
      "--dns-domain=netbird.selfhosted"
      ]
    networks:
      - proxy
    labels:
    - traefik.enable=true
    - traefik.http.routers.${SUB_DOMAIN}-api.entrypoints=https,http
    - traefik.http.routers.${SUB_DOMAIN}-api.rule=Host(`${SUB_DOMAIN}.${DOMAIN}`) && PathPrefix(`/api`)
    - traefik.http.routers.${SUB_DOMAIN}-api.tls=true
    - traefik.http.routers.${SUB_DOMAIN}-api.service=api
    - traefik.http.services.api.loadbalancer.server.port=443
    - traefik.http.routers.${SUB_DOMAIN}-management.entrypoints=https,http
    - traefik.http.routers.${SUB_DOMAIN}-management.rule=Host(`${SUB_DOMAIN}.${DOMAIN}`) && PathPrefix(`/management.ManagementService/`)
    - traefik.http.routers.${SUB_DOMAIN}-management.tls=true
    - traefik.http.routers.${SUB_DOMAIN}-management.service=${SUB_DOMAIN}-management
    - traefik.http.services.${SUB_DOMAIN}-management.loadbalancer.server.port=443
    - traefik.http.services.${SUB_DOMAIN}-management.loadbalancer.server.scheme=h2c
    - traefik.docker.network=proxy

  # Coturn
  coturn:
    image: coturn/coturn:latest
    restart: unless-stopped
    domainname: ${SUB_DOMAIN}.${DOMAIN}
    volumes:
      - ./volume/turnserver.conf:/etc/turnserver.conf:ro
    #      - ./privkey.pem:/etc/coturn/private/privkey.pem:ro
    #      - ./cert.pem:/etc/coturn/certs/cert.pem:ro
    network_mode: host
    command:
      - -c /etc/turnserver.conf

networks:
  proxy:
    external: true
